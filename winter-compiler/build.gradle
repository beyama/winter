import org.gradle.internal.jvm.Jvm

plugins {
    id 'kotlin'
    id 'kotlin-kapt'
    id 'org.jetbrains.dokka'
}

version = VERSION_NAME
group = GROUP

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

test {
    useJUnitPlatform()

    dependsOn 'cleanTest'

    testLogging {
        events "skipped", "failed"

        exceptionFormat "full"
        showExceptions true
        showCauses true
        showStackTraces true
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

dependencies {
    implementation project(':winter')

    implementation deps.kotlin.stdlib

    implementation deps.kotlinpoet.kotlinpoet
    implementation deps.kotlinpoet.metadata

    implementation deps.incap.incap
    kapt deps.incap.processor

    testImplementation project(':winter-junit5')
    testImplementation deps.test.jupiterApi
    testImplementation deps.test.kotlintest
    testImplementation deps.test.compileTesting
    testImplementation deps.javax.annotationApi // to get the legacy Generated annotation on >= JDK9

    if (!Jvm.current().javaVersion.isJava9Compatible()) {
        testImplementation files(Jvm.current().getToolsJar())
    }

    testRuntimeOnly deps.test.jupiterEngine
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from dokka
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    includes = ['dokka-packages.md']

    linkMapping {
        dir = "src/main/kotlin"
        url = "https://github.com/beyama/winter-compiler/blob/master/winter/src/main/kotlin"
        suffix = "#L"
    }
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')